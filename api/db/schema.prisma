generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int              @id @default(autoincrement())
  email               String           @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  webAuthnChallenge   String?          @unique
  credentials         UserCredential[]
}

model UserCredential {
  id         String  @id
  userId     Int
  user       User    @relation(fields: [userId], references: [id])
  publicKey  Bytes
  transports String?
  counter    BigInt
}

model Graphs {
  id                       Int             @id @default(autoincrement())
  graphName                String
  selectedTypeId           Int
  selectedType             GraphTypes      @relation(fields: [selectedTypeId], references: [id])
  creationDate             DateTime
  modifiedDate             DateTime?
  description              String?
  selectedDataSourceTypeId Int
  selectedDataSourceType   dataSourceTypes @relation(fields: [selectedDataSourceTypeId], references: [id])
  cssOverride              String?
}

model GraphTypes {
  id          Int       @id @default(autoincrement())
  graphType   GraphType
  description String
  showLegend  Boolean
  defaultCss  String
  Graphs      Graphs[]
}

model dataSourceTypes {
  id             Int            @id @default(autoincrement())
  dataSourceType DataSourceType
  description    String
  Graphs         Graphs[]
}

enum GraphType {
  SimpleLineChart
  SimpleBarChart
  SimplePieChart
}

enum DataSourceType {
  SQL
  REST
}
